{"ast":null,"code":"var _jsxFileName = \"C:\\\\codeblocks\\\\src\\\\components\\\\BlockList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlockList = () => {\n  _s();\n  const [codeBlocks, setCodeBlocks] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchCodeBlocks = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/api/code-blocks');\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        setCodeBlocks(data); // Assuming data is an array of code blocks\n      } catch (error) {\n        console.error('Error fetching code blocks:', error);\n      }\n    };\n    fetchCodeBlocks();\n  }, []);\n  const handleClick = blockId => {\n    navigate(`/block/${blockId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.heading,\n      children: \"Choose Code Block\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.buttonContainer,\n      children: codeBlocks.map(block => /*#__PURE__*/_jsxDEV(\"button\", {\n        // Use _id from MongoDB\n        onClick: () => handleClick(block._id),\n        style: styles.button,\n        children: block.title\n      }, block._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(BlockList, \"3iYCAdWNqorGnmC2AVglOomF06o=\", false, function () {\n  return [useNavigate];\n});\n_c = BlockList;\nconst styles = {\n  container: {\n    textAlign: 'center',\n    marginTop: '50px',\n    backgroundColor: '#f0f0f0',\n    padding: '20px',\n    borderRadius: '8px'\n  },\n  heading: {\n    color: '#333',\n    fontSize: '24px',\n    marginBottom: '20px'\n  },\n  buttonContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  button: {\n    margin: '10px',\n    padding: '10px 20px',\n    fontSize: '16px',\n    cursor: 'pointer',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '5px',\n    transition: 'background-color 0.3s ease'\n  }\n};\nexport default BlockList;\nvar _c;\n$RefreshReg$(_c, \"BlockList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","BlockList","_s","codeBlocks","setCodeBlocks","navigate","fetchCodeBlocks","response","fetch","ok","Error","status","data","json","error","console","handleClick","blockId","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","buttonContainer","map","block","onClick","_id","button","title","_c","textAlign","marginTop","backgroundColor","padding","borderRadius","color","fontSize","marginBottom","display","flexDirection","alignItems","margin","cursor","border","transition","$RefreshReg$"],"sources":["C:/codeblocks/src/components/BlockList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst BlockList = () => {\r\n  const [codeBlocks, setCodeBlocks] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchCodeBlocks = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/api/code-blocks');\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        setCodeBlocks(data); // Assuming data is an array of code blocks\r\n      } catch (error) {\r\n        console.error('Error fetching code blocks:', error);\r\n      }\r\n    };\r\n\r\n    fetchCodeBlocks();\r\n  }, []);\r\n\r\n  const handleClick = (blockId) => {\r\n    navigate(`/block/${blockId}`);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h1 style={styles.heading}>Choose Code Block</h1>\r\n      <div style={styles.buttonContainer}>\r\n        {codeBlocks.map((block) => (\r\n          <button\r\n            key={block._id} // Use _id from MongoDB\r\n            onClick={() => handleClick(block._id)}\r\n            style={styles.button}\r\n          >\r\n            {block.title}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    textAlign: 'center',\r\n    marginTop: '50px',\r\n    backgroundColor: '#f0f0f0',\r\n    padding: '20px',\r\n    borderRadius: '8px',\r\n  },\r\n  heading: {\r\n    color: '#333',\r\n    fontSize: '24px',\r\n    marginBottom: '20px',\r\n  },\r\n  buttonContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    margin: '10px',\r\n    padding: '10px 20px',\r\n    fontSize: '16px',\r\n    cursor: 'pointer',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    border: 'none',\r\n    borderRadius: '5px',\r\n    transition: 'background-color 0.3s ease',\r\n  },\r\n};\r\n\r\nexport default BlockList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMS,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;QACrE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCT,aAAa,CAACQ,IAAI,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDR,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,WAAW,GAAIC,OAAO,IAAK;IAC/BZ,QAAQ,CAAC,UAAUY,OAAO,EAAE,CAAC;EAC/B,CAAC;EAED,oBACEjB,OAAA;IAAKkB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBAC3BrB,OAAA;MAAIkB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjD1B,OAAA;MAAKkB,KAAK,EAAEC,MAAM,CAACQ,eAAgB;MAAAN,QAAA,EAChClB,UAAU,CAACyB,GAAG,CAAEC,KAAK,iBACpB7B,OAAA;QACkB;QAChB8B,OAAO,EAAEA,CAAA,KAAMd,WAAW,CAACa,KAAK,CAACE,GAAG,CAAE;QACtCb,KAAK,EAAEC,MAAM,CAACa,MAAO;QAAAX,QAAA,EAEpBQ,KAAK,CAACI;MAAK,GAJPJ,KAAK,CAACE,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKR,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CAzCID,SAAS;EAAA,QAEIH,WAAW;AAAA;AAAAoC,EAAA,GAFxBjC,SAAS;AA2Cf,MAAMkB,MAAM,GAAG;EACbC,SAAS,EAAE;IACTe,SAAS,EAAE,QAAQ;IACnBC,SAAS,EAAE,MAAM;IACjBC,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE,MAAM;IACfC,YAAY,EAAE;EAChB,CAAC;EACDjB,OAAO,EAAE;IACPkB,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,MAAM;IAChBC,YAAY,EAAE;EAChB,CAAC;EACDf,eAAe,EAAE;IACfgB,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,QAAQ;IACvBC,UAAU,EAAE;EACd,CAAC;EACDb,MAAM,EAAE;IACNc,MAAM,EAAE,MAAM;IACdR,OAAO,EAAE,WAAW;IACpBG,QAAQ,EAAE,MAAM;IAChBM,MAAM,EAAE,SAAS;IACjBV,eAAe,EAAE,SAAS;IAC1BG,KAAK,EAAE,MAAM;IACbQ,MAAM,EAAE,MAAM;IACdT,YAAY,EAAE,KAAK;IACnBU,UAAU,EAAE;EACd;AACF,CAAC;AAED,eAAehD,SAAS;AAAC,IAAAiC,EAAA;AAAAgB,YAAA,CAAAhB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}