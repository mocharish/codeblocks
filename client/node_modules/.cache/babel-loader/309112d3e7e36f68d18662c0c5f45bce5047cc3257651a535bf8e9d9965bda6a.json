{"ast":null,"code":"var _jsxFileName = \"C:\\\\codeblocks\\\\client\\\\src\\\\components\\\\BlockPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { solarizedlight } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nconst CodeBlockPage = () => {\n  _s();\n  const {\n    blockId\n  } = useParams();\n  const [role, setRole] = useState('Loading...');\n  const [codeBlock, setCodeBlock] = useState('');\n  const [title, setTitle] = useState('');\n  const [studentCount, setStudentCount] = useState(0);\n  const navigate = useNavigate();\n  const [showSmiley, setShowSmiley] = useState(false);\n  useEffect(() => {\n    if (!blockId) {\n      console.error('No blockId provided in route parameters');\n      return;\n    }\n    const storedRole = localStorage.getItem('role');\n    if (storedRole) {\n      setRole(storedRole);\n    }\n\n    // Join the code block room\n    socket.emit('joinCodeBlock', blockId);\n    socket.on('role', assignedRole => {\n      setRole(assignedRole);\n      localStorage.setItem('role', assignedRole);\n    });\n    socket.on('codeBlock', codeData => {\n      setCodeBlock(codeData.code);\n      setTitle(codeData.title);\n    });\n    socket.on('studentCount', count => {\n      setStudentCount(count);\n    });\n    socket.on('mentorLeft', originalCode => {\n      console.log('Mentor has left. Resetting code and redirecting to lobby.');\n      if (role === 'student') {\n        alert('The mentor has left. Redirecting to the lobby.');\n        setCodeBlock(originalCode); // Reset the code\n        navigate('/'); // Redirect to the lobby\n      }\n    });\n    socket.on('solutionMatched', matched => {\n      if (matched) {\n        setShowSmiley(true);\n      }\n    });\n    socket.on('reconnect', () => {\n      const storedRole = localStorage.getItem('role');\n      if (blockId && storedRole) {\n        socket.emit('joinCodeBlock', blockId);\n      }\n    });\n\n    // Fetch code block on initial load\n    const fetchCodeBlock = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/api/code-blocks/${blockId}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const codeData = await response.json();\n        setCodeBlock(codeData.code);\n        setTitle(codeData.title);\n      } catch (error) {\n        console.error('Error fetching code block:', error);\n      }\n    };\n    fetchCodeBlock(); // Fetch code block on component mount\n\n    // Cleanup event listeners on unmount\n    return () => {\n      socket.off('role');\n      socket.off('codeBlock');\n      socket.off('studentCount');\n      socket.off('mentorLeft');\n      socket.off('solutionMatched');\n      socket.off('reconnect');\n    };\n  }, [blockId, role, navigate]);\n  const handleCodeChange = e => {\n    const newCode = e.target.value;\n    setCodeBlock(newCode);\n    socket.emit('updateCode', newCode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title || 'Code Block'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Role: \", role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of Students: \", studentCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n      language: \"javascript\",\n      style: solarizedlight,\n      children: codeBlock\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), role === 'student' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: codeBlock,\n      onChange: handleCodeChange,\n      style: {\n        width: '100%',\n        height: '300px',\n        fontFamily: 'monospace'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), showSmiley && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '100px',\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: \"\\uD83D\\uDE03\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeBlockPage, \"V5YY28iV629amoBlezh9Ru8V+MM=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CodeBlockPage;\nexport default CodeBlockPage;\nvar _c;\n$RefreshReg$(_c, \"CodeBlockPage\");","map":{"version":3,"names":["React","useState","useEffect","io","useNavigate","useParams","Prism","SyntaxHighlighter","solarizedlight","jsxDEV","_jsxDEV","socket","CodeBlockPage","_s","blockId","role","setRole","codeBlock","setCodeBlock","title","setTitle","studentCount","setStudentCount","navigate","showSmiley","setShowSmiley","console","error","storedRole","localStorage","getItem","emit","on","assignedRole","setItem","codeData","code","count","originalCode","log","alert","matched","fetchCodeBlock","response","fetch","ok","Error","status","json","off","handleCodeChange","e","newCode","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","language","style","onChange","width","height","fontFamily","fontSize","textAlign","marginTop","_c","$RefreshReg$"],"sources":["C:/codeblocks/client/src/components/BlockPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { solarizedlight } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\nconst socket = io('http://localhost:3001');\r\n\r\nconst CodeBlockPage = () => {\r\n  const { blockId } = useParams();\r\n  const [role, setRole] = useState('Loading...');\r\n  const [codeBlock, setCodeBlock] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [studentCount, setStudentCount] = useState(0);\r\n  const navigate = useNavigate();\r\n  const [showSmiley, setShowSmiley] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!blockId) {\r\n      console.error('No blockId provided in route parameters');\r\n      return;\r\n    }\r\n\r\n    const storedRole = localStorage.getItem('role');\r\n    if (storedRole) {\r\n      setRole(storedRole);\r\n    }\r\n\r\n    // Join the code block room\r\n    socket.emit('joinCodeBlock', blockId);\r\n\r\n    socket.on('role', (assignedRole) => {\r\n      setRole(assignedRole);\r\n      localStorage.setItem('role', assignedRole);\r\n    });\r\n\r\n    socket.on('codeBlock', (codeData) => {\r\n      setCodeBlock(codeData.code);\r\n      setTitle(codeData.title);\r\n    });\r\n\r\n    socket.on('studentCount', (count) => {\r\n      setStudentCount(count);\r\n    });\r\n\r\n    socket.on('mentorLeft', (originalCode) => {\r\n      console.log('Mentor has left. Resetting code and redirecting to lobby.');\r\n\r\n      if (role === 'student') {\r\n        alert('The mentor has left. Redirecting to the lobby.');\r\n        setCodeBlock(originalCode);  // Reset the code\r\n        navigate('/');  // Redirect to the lobby\r\n      }\r\n    });\r\n\r\n    socket.on('solutionMatched', (matched) => {\r\n      if (matched) {\r\n        setShowSmiley(true);\r\n      }\r\n    });\r\n\r\n    socket.on('reconnect', () => {\r\n      const storedRole = localStorage.getItem('role');\r\n      if (blockId && storedRole) {\r\n        socket.emit('joinCodeBlock', blockId);\r\n      }\r\n    });\r\n\r\n    // Fetch code block on initial load\r\n    const fetchCodeBlock = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3001/api/code-blocks/${blockId}`);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const codeData = await response.json();\r\n        setCodeBlock(codeData.code);\r\n        setTitle(codeData.title);\r\n      } catch (error) {\r\n        console.error('Error fetching code block:', error);\r\n      }\r\n    };\r\n\r\n    fetchCodeBlock(); // Fetch code block on component mount\r\n\r\n    // Cleanup event listeners on unmount\r\n    return () => {\r\n      socket.off('role');\r\n      socket.off('codeBlock');\r\n      socket.off('studentCount');\r\n      socket.off('mentorLeft');\r\n      socket.off('solutionMatched');\r\n      socket.off('reconnect');\r\n    };\r\n  }, [blockId, role, navigate]);\r\n\r\n  const handleCodeChange = (e) => {\r\n    const newCode = e.target.value;\r\n    setCodeBlock(newCode);\r\n    socket.emit('updateCode', newCode);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>{title || 'Code Block'}</h1>\r\n      <p>Role: {role}</p>\r\n      <p>Number of Students: {studentCount}</p>\r\n      <SyntaxHighlighter language=\"javascript\" style={solarizedlight}>\r\n        {codeBlock}\r\n      </SyntaxHighlighter>\r\n      {role === 'student' && (\r\n        <textarea\r\n          value={codeBlock}\r\n          onChange={handleCodeChange}\r\n          style={{ width: '100%', height: '300px', fontFamily: 'monospace' }}\r\n        />\r\n      )}\r\n      {showSmiley && (\r\n        <div style={{ fontSize: '100px', textAlign: 'center', marginTop: '20px' }}>\r\n          ðŸ˜ƒ\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeBlockPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}